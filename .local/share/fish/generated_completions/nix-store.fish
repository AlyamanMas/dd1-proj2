# nix-store
# Autogenerated from man page /home/runner/.nix-profile/share/man/man1/nix-store.1.gz
complete -c nix-store -l add-root
complete -c nix-store -l force-realise -d 'path, which must be inside a directory that is scanned for roots by the garba…'
complete -c nix-store -l indirect -d 'flag is used'
complete -c nix-store -l help
complete -c nix-store -l version
complete -c nix-store -l verbose -s v
complete -c nix-store -l quiet
complete -c nix-store -l no-build-output -s Q
complete -c nix-store -l max-jobs -s j
complete -c nix-store -l cores
complete -c nix-store -o jN -d 'flag to GNU Make'
complete -c nix-store -l max-silent-time
complete -c nix-store -l timeout
complete -c nix-store -l keep-going -s k
complete -c nix-store -l keep-failed -s K
complete -c nix-store -l fallback
complete -c nix-store -l no-build-hook
complete -c nix-store -l readonly-mode
complete -c nix-store -l arg
complete -c nix-store -l argstr
complete -c nix-store -l attr -s A
complete -c nix-store -l expr -s E
complete -c nix-store -s I
complete -c nix-store -l option
complete -c nix-store -l repair
complete -c nix-store -l realise -d 'essentially “builds” the specified store paths'
complete -c nix-store -l dry-run
complete -c nix-store -l ignore-unknown
complete -c nix-store -l check
complete -c nix-store -l serve -d 'provides access to the Nix store over stdin and stdout, and is intended to be…'
complete -c nix-store -l write
complete -c nix-store -l gc -d 'performs a garbage collection on the Nix store'
complete -c nix-store -l print-roots
complete -c nix-store -l print-live
complete -c nix-store -l print-dead
complete -c nix-store -l delete
complete -c nix-store -l max-freed
complete -c nix-store -l ignore-liveness -d 'Example $ nix-store --delete /nix/store/zq0h41l75vlb4z45kzgjjmsjxvcv1qk7-mesa…'
complete -c nix-store -l query -d 'displays various bits of information about the store paths '
complete -c nix-store -l outputs
complete -c nix-store -l use-output -s u
complete -c nix-store -s f
complete -c nix-store -l requisites -s R
complete -c nix-store -l include-outputs
complete -c nix-store -l references
complete -c nix-store -l referrers
complete -c nix-store -l referrers-closure
complete -c nix-store -l deriver -s d
complete -c nix-store -l graph
complete -c nix-store -l tree
complete -c nix-store -l graphml
complete -c nix-store -l binding -s b
complete -c nix-store -l hash
complete -c nix-store -l size
complete -c nix-store -l roots
complete -c nix-store -l add -d 'adds the specified paths to the Nix store'
complete -c nix-store -l add-fixed -d 'adds the specified paths to the Nix store.  Unlike'
complete -c nix-store -l recursive
complete -c nix-store -l verify -d 'verifies the internal consistency of the Nix database, and the consistency be…'
complete -c nix-store -l check-contents
complete -c nix-store -l verify-path -d 'compares the contents of the given store paths to their cryptographic hashes …'
complete -c nix-store -l repair-path -d 'attempts to “repair” the specified paths by redownloading them using the avai…'
complete -c nix-store -l dump -d 'produces a NAR (Nix ARchive) file containing the contents of the file system …'
complete -c nix-store -l restore -d 'unpacks a NAR archive to path, which must not already exist'
complete -c nix-store -l export -d 'writes a serialisation of the specified store paths to standard output in a f…'
complete -c nix-store -l import -d 'reads a serialisation of a set of store paths produced by nix-store --export …'
complete -c nix-store -l optimise -d 'reduces Nix store disk space usage by finding identical files in the store an…'
complete -c nix-store -o vv -d or
complete -c nix-store -o vvv -d 'to get some progress indication'
complete -c nix-store -l read-log -d 'prints the build log of the specified store paths on standard output'
complete -c nix-store -l dump-db -d 'writes a dump of the Nix database to standard output'
complete -c nix-store -l load-db
complete -c nix-store -l print-env -d 'prints out the environment of a derivation in a format that can be evaluated …'

